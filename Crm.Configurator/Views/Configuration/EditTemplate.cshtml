@inherits Crm.Library.Modularization.CrmViewUserControl
@using Crm.Library.Globalization.Extensions

<div class="modal-header card-header ch-alt">
<button type="button" class="close" data-dismiss="modal" aria-label="@(Html.Localize("Close"))">
<span aria-hidden="true">&times;</span>
</button>
<h4 class="modal-title" data-bind="translatedText: 'AddConfigurationRule'"></h4>
<div data-bind="if: $root.ruleExist() === true">
   <div class="help-block c-red" data-bind="translatedText: 'Restricted by current configuration.'"></div>
</div>
</div>
<div class="modal-body card-body card-padding">
   <form role="form" action="#" data-bind="with: configurationRule">
      <form-element id="VariableValues" params="value: VariableValues, caption: 'Article', type: 'select'">
         <select name="VariableValues" class="form-control" data-bind="select2autocompleter: {
            data: value,
            autocompleteOptions: {
            table: 'CrmArticle_Article',
            mapDisplayObject: Helper.Article.mapArticleForSelect2Display,
            placeholder: placeholder,
            customFilter: function (query) {
            return query.filter(function (it) {
            return it.ArticleTypeKey !== this.articleType;
            },
            { articleType: 'ConfigurationBase' });
            }
            }
            }">
         </select>
      </form-element>
      <form-element id="Validation" params="value: Validation, caption: 'Validation', type: 'select'">
         <select name="Validation" class="form-control" data-bind="select2autocompleter: { data: value, autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmConfigurator_ConfigurationRuleType'), placeholder: placeholder}">
         </select>
      </form-element>
      <form-element id="AffectedVariableValues" params="value: AffectedVariableValues, caption: 'Article', type: 'select'">
         <select name="AffectedVariableValues" class="form-control" data-bind="select2autocompleter: {
            data: value,
            autocompleteOptions: {
            table: 'CrmArticle_Article',
            mapDisplayObject: Helper.Article.mapArticleForSelect2Display,
            placeholder: placeholder,
            customFilter: function (query) {
            return query.filter(function (it) {
            return it.ArticleTypeKey !== this.articleType;
            },
            { articleType: 'ConfigurationBase' });
            }
            }
            }">
         </select>
      </form-element>
   </form>
</div>
<div class="modal-footer card-header ch-alt p-15">
   <button name="Cancel" type="button" class="btn btn-lg btn-default f-13 waves-effect" data-bind="click: Helper.Database.clearTrackedEntities" data-dismiss="modal">
   @(Html.Localize("Cancel"))
   </button>
   <button name="Save" type="button" class="btn btn-lg btn-primary f-13 waves-effect" data-bind="click: save, disable: loading">
   @(Html.Localize("Save"))
   </button>
</div>