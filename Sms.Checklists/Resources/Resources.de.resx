<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>Aktion</value>
  </data>
  <data name="AddChecklist" xml:space="preserve">
    <value>Checkliste hinzufügen</value>
  </data>
  <data name="Checklists" xml:space="preserve">
    <value>Checklisten</value>
  </data>
  <data name="CompletedBy" xml:space="preserve">
    <value>Abgeschlossen von</value>
  </data>
  <data name="InProgressBy" xml:space="preserve">
    <value>In Bearbeitung durch</value>
  </data>
  <data name="NoServiceOrderChecklistsAdded" xml:space="preserve">
    <value>Diesem Auftrag wurden keine Checklisten zugeordnet.</value>
  </data>
  <data name="NotCompleted" xml:space="preserve">
    <value>Noch nicht abgeschlossen</value>
  </data>
  <data name="ServiceOrderChecklistsEmptySlate" xml:space="preserve">
    <value>Diesem Serviceauftrag wurden noch keine Checklisten zugeordnet.</value>
  </data>
  <data name="SmsChecklists_ServiceOrderChecklist" xml:space="preserve">
    <value>Auftrags-Checklisten</value>
  </data>
  <data name="RequiredForServiceOrderCompletion" xml:space="preserve">
    <value>Für Auftragsabschluss erforderlich</value>
  </data>
  <data name="SendToCustomer" xml:space="preserve">
    <value>An Kunden versenden</value>
  </data>
  <data name="TheFollowingChecklistsAreRequiredForServiceOrderCompletion" xml:space="preserve">
    <value>Die folgenden Checklisten müssen vor Auftragsabschluss noch abgeschlossen werden:</value>
  </data>
  <data name="ChecklistInstallationTypeRelationship" xml:space="preserve">
    <value>Checkliste-{Installation} Zuordnung</value>
  </data>
  <data name="ChecklistInstallationTypeRelationshipAlreadyExists" xml:space="preserve">
    <value>Zuordnung existiert bereits</value>
  </data>
  <data name="WillBeSentToCustomer" xml:space="preserve">
    <value>wird an Kunden versendet</value>
  </data>
  <data name="ChecklistRequired" xml:space="preserve">
    <value>Checkliste wird benötigt</value>
  </data>
  <data name="SelectedChecklistDisabledAdd" xml:space="preserve">
    <value>Die ausgewählte Checkliste wurde deaktiviert, sie kann nicht mit diesem Serviceauftrag verknüpft werden.</value>
  </data>
  <data name="SelectedChecklistDisabledEdit" xml:space="preserve">
    <value>Die ausgewählte Checkliste wurde deaktiviert, sie kann nicht bearbeitet werden.</value>
  </data>
  <data name="Deactivated" xml:space="preserve">
    <value>Deaktiviert</value>
  </data>
  <data name="CreationDynamicForm" xml:space="preserve">
    <value>Erstellungsformular</value>
  </data>
  <data name="CreationDynamicFormId" xml:space="preserve">
    <value>Erstellungsformular</value>
  </data>
  <data name="ServiceOrderChecklistEmptySlate" xml:space="preserve">
    <value>Es sind keine Checklisten verfügbar</value>
  </data>
  <data name="CompletionDynamicForm" xml:space="preserve">
    <value>Abschlussformular</value>
  </data>
  <data name="CompletionDynamicFormId" xml:space="preserve">
    <value>Abschlussformular</value>
  </data>
  <data name="CompletionDynamicForms" xml:space="preserve">
    <value>Abschlussformulare</value>
  </data>
  <data name="IncompleteCompletionDynamicFormMessage" xml:space="preserve">
    <value>Es existiert ein noch nicht abgeschlossenes Abschlussformular. Soll der Servicefallstatus trotzdem geändert werden?</value>
  </data>
  <data name="IncompleteCompletionDynamicFormsMessage" xml:space="preserve">
    <value>Es existieren noch nicht abgeschlossene Abschlussformulare für 
{0}.

Sollen die Status trotzdem geändert werden?</value>
  </data>
  <data name="ViewCreationDynamicForm" xml:space="preserve">
    <value>Erstellungsformular öffnen</value>
  </data>
  <data name="ViewCompletionDynamicForm" xml:space="preserve">
    <value>Abschlussformular öffnen</value>
  </data>
  <data name="PreviewCompletionDynamicForm" xml:space="preserve">
    <value>Abschlussformular Vorschau</value>
  </data>
  <data name="EditCompletionDynamicForm" xml:space="preserve">
    <value>Abschlussformular bearbeiten</value>
  </data>
  <data name="CanAttachServiceCases" xml:space="preserve">
    <value>Mit Servicefällen verknüpfbar</value>
  </data>
  <data name="SmsChecklists_ServiceCaseChecklist" xml:space="preserve">
    <value>Servicefallchecklisten</value>
  </data>
  <data name="ServiceCaseChecklistEmptySlate" xml:space="preserve">
    <value>Es sind keine Checklisten verfügbar</value>
  </data>
  <data name="ConfirmDiscardServiceCase" xml:space="preserve">
    <value>Sind Sie sicher, dass der ungespeicherte Servicefall verworfen werden soll?</value>
  </data>
  <data name="CannotCreateServiceCase" xml:space="preserve">
    <value>Service Case kann hier nicht erstellt werden</value>
  </data>
  <data name="AddPDFChecklist" xml:space="preserve">
    <value>PDF Checkliste hinzufügen</value>
  </data>
  <data name="Delete Signature" xml:space="preserve">
    <value>Unterschrift löschen</value>
  </data>
  <data name="Edit_PDF" xml:space="preserve">
    <value>PDF bearbeiten</value>
  </data>
  <data name="PDF-Checklist" xml:space="preserve">
    <value>PDF Checkliste</value>
  </data>
  <data name="PDF-Checklists" xml:space="preserve">
    <value>PDF Checklisten</value>
  </data>
  <data name="PdfDynamicFormDesignerEmptySlate" xml:space="preserve">
    <value>Bitte Laden Sie eine PDF hoch.</value>
  </data>
  <data name="PreviewText" xml:space="preserve">
    <value>Diese PDF-Datei ist dem Einsatz hinzugefügt. Um die PDF automatisch mit Daten zu befüllen oder abzuschließen, bitte wecheln Sie in das Bearbeitungsfenster.</value>
  </data>
  <data name="Save Signature" xml:space="preserve">
    <value>Unterschrift speichern</value>
  </data>
</root>