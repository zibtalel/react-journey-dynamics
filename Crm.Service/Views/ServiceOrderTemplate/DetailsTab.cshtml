@inherits Crm.Library.Modularization.CrmViewUserControl
@using Crm.Library.Modularization.Extensions

<div role="tabpanel" class="tab-pane animated fadeIn" id="tab-details">
	<pmb-block params="icon: 'label-alt-outline', caption: 'General', context: { serviceOrderTemplate: serviceOrderTemplate }, condition: serviceOrderTemplateIsEditable">
		<pmbb-view>
			<!-- ko with: serviceOrderTemplate -->
			<pmbb-view-entry params="caption: 'Name'">
				<span data-bind="text: ErrorMessage"></span>
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: ErrorMessage"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'Type'">
				<span data-bind="if: TypeKey, lookupValue: TypeKey, lookups: $root.lookups.serviceOrderTypes"></span>
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: TypeKey"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'ServiceOrderStatus'">
				<span data-bind="if: StatusKey, lookupValue: StatusKey, lookups: $root.lookups.serviceOrderStatuses"></span>
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: StatusKey"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'InvoicingType'">
				<span data-bind="if: InvoicingTypeKey, lookupValue: InvoicingTypeKey, lookups: $root.lookups.invoicingTypes"></span>
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: InvoicingTypeKey"></span>
			</pmbb-view-entry>
			@Html.PluginRenderActions("ServiceOrderTemplateDetailsGeneralView")
			<!-- /ko -->
		</pmbb-view>
		<pmbb-edit>
			<!-- ko with: serviceOrderTemplate -->
			<pmbb-edit-entry params="caption: 'Name', validationElement: ErrorMessage">
				<input name="ErrorMessage" class="form-control" type="text" data-bind="value: ErrorMessage"/>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'Type', validationElement: TypeKey">
				<select name="TypeKey" class="form-control" data-bind="select2autocompleter: { data: TypeKey, autocompleteOptions: { customFilter: Helper.ServiceOrder.queryServiceOrderType, table: 'CrmService_ServiceOrderType', mapDisplayObject: Helper.Lookup.mapLookupForSelect2Display, getElementByIdQuery: Helper.Lookup.getLookupByKeyQuery, placeholder: $parent.placeholder }}">
				</select>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'ServiceOrderStatus', validationElement: StatusKey">
				<select name="StatusKey" class="form-control" data-bind="select2autocompleter: { data: StatusKey, autocompleteOptions: $root.getServiceOrderStatusAutocompleterOptions('CrmService_ServiceOrderStatus'), placeholder: $parent.placeholder}">
				</select>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'InvoicingType', validationElement: InvoicingTypeKey">
				<select class="form-control" data-bind="select2autocompleter: { data: InvoicingTypeKey, autocompleteOptions: Helper.Lookup.getAutocompleteOptions('Main_InvoicingType'), placeholder: $parent.placeholder}">
				</select>
			</pmbb-edit-entry>
			@Html.PluginRenderActions("ServiceOrderTemplateDetailsGeneralEdit")
			<!-- /ko -->
		</pmbb-edit>
	</pmb-block>
	<pmb-block params="icon: 'calendar-note', caption: 'SchedulingInformation', context: { serviceOrderTemplate: serviceOrderTemplate }, condition: serviceOrderTemplateIsEditable, onSave: onSaveScheduling">
		<pmbb-view>
			<!-- ko with: serviceOrderTemplate -->
			<pmbb-view-entry params="caption: 'Priority'">
				<span data-bind="if: PriorityKey, lookupValue: PriorityKey, lookups: $root.lookups.servicePriorities"></span>
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: PriorityKey"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'Usergroup'">
				<!-- ko if: UserGroup -->
				<span data-bind="text: UserGroup().Name"></span>
				<!-- /ko -->
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: UserGroup"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'ResponsibleUser'">
				<!-- ko if: ResponsibleUserUser -->
				<span data-bind="text: Helper.User.getDisplayName(ResponsibleUserUser)"></span>
				<!-- /ko -->
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: ResponsibleUserUser"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'Skills'">
				<!-- ko if: RequiredSkillKeys().length > 0 -->
				<span data-bind="text: $root.getSkillsFromKeys(RequiredSkillKeys()).map(function(x){ return x.text; }).join(', ')"></span>
				<!-- /ko -->
				<span class="c-gray" data-bind="translatedText: 'Unspecified', if: RequiredSkillKeys().length === 0"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'PreferredTechnicianUsergroup'">
				<!-- ko if: PreferredTechnicianUsergroupObject -->
				<span data-bind="text: PreferredTechnicianUsergroupObject().Name"></span>
				<!-- /ko -->
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: PreferredTechnicianUsergroupObject"></span>
			</pmbb-view-entry>
			<pmbb-view-entry params="caption: 'PreferredTechnician'">
				<!-- ko if: PreferredTechnicianUser -->
				<span data-bind="text: Helper.User.getDisplayName(PreferredTechnicianUser)"></span>
				<!-- /ko -->
				<span class="c-gray" data-bind="translatedText: 'Unspecified', ifnot: PreferredTechnicianUser"></span>
			</pmbb-view-entry>
			@Html.PluginRenderActions("ServiceOrderTemplateDetailsSchedulingView")
			<!-- /ko -->
		</pmbb-view>
		<pmbb-edit>
			<!-- ko with: serviceOrderTemplate -->
			<pmbb-edit-entry params="caption: 'Priority', validationElement: PriorityKey">
				<select name="PriorityKey" class="form-control" data-bind="select2autocompleter: { data: PriorityKey, autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmService_ServicePriority'), placeholder: $parent.placeholder}">
				</select>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'Usergroup', validationElement: UserGroupKey">
				<select class="form-control" data-bind="select2autocompleter: { data: UserGroupKey, autocompleteOptions: { orderBy: ['Name'], table: 'Main_Usergroup', placeholder: $parent.placeholder, mapDisplayObject: function(ug){ return { id: ug.Id, item: ug, text: ug.Name }; }, onSelect: function(value) { UserGroup(value ? value.asKoObservable() : null); } } }">
				</select>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'ResponsibleUser', validationElement: ResponsibleUser">
				<select class="form-control" data-bind="select2autocompleter: { data: ResponsibleUser, autocompleteOptions: { orderBy: ['LastName'], table: 'Main_User', mapDisplayObject: Helper.User.mapForSelect2Display, placeholder: $parent.placeholder, customFilter: function (query, term) { return Helper.User.filterUserQuery(query, term, UserGroupKey()); }, onSelect: function(value) { ResponsibleUserUser(value ? value.asKoObservable() : null); } } }">
				</select>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'Skills'">
				<select class="form-control" multiple="multiple" data-bind="select2autocompleter: { data: RequiredSkillKeys, autocompleteOptions: { table: 'Main_Skill', customFilter: Helper.Lookup.queryLookup, mapDisplayObject: Helper.Lookup.mapLookupForSelect2Display, getElementByIdQuery: Helper.Lookup.getLookupByKeyQuery, placeholder: $parent.placeholder } }">
				</select>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'PreferredTechnicianUsergroup', validationElement: PreferredTechnicianUsergroupKey">
				<select class="form-control" data-bind="select2autocompleter: { data: PreferredTechnicianUsergroupKey, autocompleteOptions: { orderBy: ['Name'], table: 'Main_Usergroup', mapDisplayObject: Helper.User.mapUsergroupForSelect2Display, getElementByIdQuery: Helper.User.filterUsergroupQueryById, placeholder: $parent.placeholder, onSelect: function(value) { PreferredTechnicianUsergroupObject(value ? value.asKoObservable() : null); } } }">
				</select>
			</pmbb-edit-entry>
			<pmbb-edit-entry params="caption: 'PreferredTechnician', validationElement: PreferredTechnician">
				<select class="form-control" data-bind="select2autocompleter: { data: PreferredTechnician, autocompleteOptions: { orderBy: ['LastName'], table: 'Main_User', mapDisplayObject: Helper.User.mapForSelect2Display, customFilter: $root.preferredTechnicianFilter.bind($parentContext.$parentContext.$parent), placeholder: $parent.placeholder, onSelect: function(value) { PreferredTechnicianUser(value ? value.asKoObservable() : null); } } }">
				</select>
			</pmbb-edit-entry>
			@Html.PluginRenderActions("ServiceOrderTemplateDetailsSchedulingEdit")
			<!-- /ko -->
		</pmbb-edit>
	</pmb-block>
	<floating-action-button>
		@Html.PluginRenderActions("ServiceOrderTemplateDetailsPrimaryAction")
	</floating-action-button>
</div>