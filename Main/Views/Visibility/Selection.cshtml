@inherits Crm.Library.Modularization.CrmViewUserControl
@using Crm.Library.BaseModel
@using Crm.Library.Globalization.Extensions

<div class="contact-visibility" id="contact-visibility" data-bind="validationElement: entity().Visibility">
	<p>
		<strong>
			<span data-bind="text: visibilityQuestion"></span>
		</strong>
	</p>

	<div class="form-group">
		<div class="radio m-b-15">
			<label>
				<input type="radio" data-bind="checked: entity().Visibility, checkedValue: @((int)Visibility.OnlyMe)" />
				<i class="input-helper"></i>
				@(Html.Localize("OnlyMe"))
			</label>
		</div>
	</div>

	<div class="form-group">
		<div class="radio m-b-15">
			<label>
				<input type="radio" data-bind="checked: entity().Visibility, checkedValue: @((int)Visibility.Everybody)" />
				<i class="input-helper"></i>
				@(Html.Localize("Everybody"))
			</label>
		</div>
	</div>

	<div class="form-group">
		<div class="radio m-b-15">
			<label>
				<input type="radio" data-bind="checked: entity().Visibility, checkedValue: @((int)Visibility.UserGroups)" />
				<i class="input-helper"></i>
				@(Html.Localize("UserGroups"))
			</label>
		</div>
	</div>
	<div class="form-group" data-bind="visible: entity().Visibility() == @((int)Visibility.UserGroups)">
		<select class="form-control" id="usergroups_selection" multiple="multiple" name="VisibleToUsergroupIds" data-bind="select2autocompleter: { data: selectedUserGroupToDisplay(),autocompleteOptions: {  table: 'Main_Usergroup', mapDisplayObject: Helper.User.mapUsergroupForSelect2Display}},
			selectedOptions: selectedUserGroupIds ">
		</select>
	</div>


	<div class="form-group">
		<div class="radio m-b-15">
			<label>
				<input type="radio" data-bind="checked: entity().Visibility, checkedValue: @((int)Visibility.Users)" />
				<i class="input-helper"></i>
				@(Html.Localize("Users"))
			</label>
		</div>
	</div>
	<div id="Users" class="form-group" data-bind="visible: entity().Visibility() == @((int)Visibility.Users)">
		<select class="form-control " name="VisibleToUserIds" id="users_selection" multiple="multiple"  data-bind="select2autocompleter: { data: selectedUsersToDisplay(),autocompleteOptions: { orderBy: ['LastName'], table: 'Main_User',mapDisplayObject: Helper.User.mapForSelect2Display,customFilter: Helper.User.filterUserQuery }} 
			,selectedOptions: selectedUserIds ">
		</select>
	</div>
	
	<small class="help-block" data-bind="validationMessage: entity().Visibility"></small>

</div>
