@inherits Crm.Library.Modularization.CrmViewUserControl
@using Crm.Library.Globalization.Extensions

<div class="modal-header card-header ch-alt" data-bind="with: documentAttribute">
	<button type="button" class="close" data-dismiss="modal" aria-label="@(Html.Localize("Close"))">
		<span aria-hidden="true">&times;</span>
	</button>
	<h4 class="modal-title" data-bind="visible: innerInstance.entityState === 20">@(Html.Localize("NewDocument"))</h4>
	<h4 class="modal-title" data-bind="visible: innerInstance.entityState !== 20">@(Html.Localize("EditDocument"))</h4>
</div>
<!-- ko ifnot: isValidDocumentSize() -->
<div id="empty-times-or-materials-hint" class="alert alert-danger" role="alert">
	<p data-bind="text: sizeValidationMessage"></p>
</div>
<!-- /ko -->
<div class="modal-body card-body card-padding">
	<form role="form" action="#" data-bind="with: documentAttribute">
		<form-element params="value: ExtensionValues().ServiceOrderTimeId, caption: 'ServiceOrderTime'" data-bind="visible: window.Crm.Service.Settings.ServiceContract.MaintenanceOrderGenerationMode === 'JobPerInstallation'">
			<select class="form-control" data-bind="select2autocompleter: { data: value, autocompleteOptions: { table: 'CrmService_ServiceOrderTime', orderBy: ['PosNo'], joins: Helper.ServiceOrderTime.getAutocompleteJoins(), customFilter: $root.getServiceOrderTimeAutocompleteFilter.bind($root), mapDisplayObject: function (o) { return { id: o.Id, text: $root.getServiceOrderTimeAutocompleteDisplay(o) }; }, placeholder: placeholder} }">
			</select>
		</form-element>
		<form-element id="DocumentCategory" params="value: DocumentCategoryKey, caption: 'Category', type: 'select'">
			<select class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.documentCategories, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('Main_DocumentCategory'), placeholder: placeholder}">
			</select>
		</form-element>
		<form-element params="value: Description, caption: 'Description', type: 'text'"></form-element>
		<div data-bind="validationElement: Length">
			<form-element params="value: $parent.fileResource, caption: 'File', type: 'fileResource'"></form-element>
			<small class="help-block" data-bind="validationMessage: Length"></small>
		</div>
		<!-- ko if: $root.documentAttribute().Length() > 0 -->
		<form-element params="value: ExtensionValues().SendToInternalSales, caption: 'SendToInternalSales', type: 'checkbox'"></form-element>
		<form-element params="value: ExtensionValues().SendToCustomer, caption: 'SendToCustomer', type: 'checkbox'"></form-element>
		<!-- /ko -->
		<span>@(Html.Localize("SendToInternalSalesDocumentsCapacity")) : <span style="font-weight:bold" data-bind="fileSize: $root.sendTobackOfficeDocumentsSize()"></span></span>
		<br />
		<span>@(Html.Localize("SendToCustomerDocumentsCapacity")) : <span style="font-weight:bold" data-bind="fileSize: $root.sendToCustomerDocumentsSize()"></span></span>
	</form>
</div>
<div class="modal-footer card-header ch-alt p-15">
	<button type="button" class="btn btn-lg btn-default f-13 waves-effect" data-bind="click: Helper.Database.clearTrackedEntities" data-dismiss="modal">
		@(Html.Localize("Cancel"))
	</button>
	<button type="button" class="btn btn-lg btn-primary f-13 waves-effect" data-bind="click: save, disable: loading">
		@(Html.Localize("Save"))
	</button>
</div>
